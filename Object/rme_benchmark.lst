ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 1


   1              		.cpu cortex-a9
   2              		.arch armv7-a
   3              		.fpu neon-fp16
   4              		.arch_extension mp
   5              		.arch_extension sec
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"rme_benchmark.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Source/rme_benchmark.c"
  20              		.global	RME_Stack
  21              		.section	.bss.RME_Stack,"aw",%nobits
  22              		.align	2
  25              	RME_Stack:
  26 0000 00000000 		.space	8192
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              		.global	Time
  28              		.section	.bss.Time,"aw",%nobits
  29              		.align	2
  32              	Time:
  33 0000 00000000 		.space	20000
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  34              		.global	RME_Bench_Buf
  35              		.section	.bss.RME_Bench_Buf,"aw",%nobits
  36              		.align	2
  39              	RME_Bench_Buf:
  40 0000 00000000 		.space	1024
  40      00000000 
  40      00000000 
  40      00000000 
  40      00000000 
  41              		.section	.text.__USR_Putchar,"ax",%progbits
  42              		.align	2
  43              		.global	__USR_Putchar
  44              		.syntax unified
  45              		.arm
  47              	__USR_Putchar:
  48              	.LFB0:
  49              		.file 2 "Include/benchmark.h"
   1:Include/benchmark.h **** 
   2:Include/benchmark.h **** #include"rme.h"
   3:Include/benchmark.h **** /* UART peripheral address */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 2


   4:Include/benchmark.h **** #define RME_A7A_UART_CONTROL      (*((volatile unsigned int*)(0xE0001000)))
   5:Include/benchmark.h **** #define RME_A7A_UART_MODE         (*((volatile unsigned int*)(0xE0001004)))
   6:Include/benchmark.h **** #define RME_A7A_UART_BRGEN        (*((volatile unsigned int*)(0xE0001018)))
   7:Include/benchmark.h **** #define RME_A7A_UART_STATUS       (*((volatile unsigned int*)(0xE000102C)))
   8:Include/benchmark.h **** #define RME_A7A_UART_FIFO         (*((volatile unsigned int*)(0xE0001030)))
   9:Include/benchmark.h **** #define RME_A7A_UART_BRDIV        (*((volatile unsigned int*)(0xE0001034)))
  10:Include/benchmark.h **** #define RME_A7A_UART_STATUS_TXE   (1U<<3)
  11:Include/benchmark.h **** //#define RME_DBG_S(STR)                              RME_Str_Print((const signed char*)(STR))
  12:Include/benchmark.h **** 
  13:Include/benchmark.h **** 
  14:Include/benchmark.h **** #define RME_A7A_PUTCHAR(CHAR) \
  15:Include/benchmark.h **** do \
  16:Include/benchmark.h **** { \
  17:Include/benchmark.h ****     while((RME_A7A_UART_STATUS&RME_A7A_UART_STATUS_TXE)==0); \
  18:Include/benchmark.h **** 	RME_A7A_UART_FIFO=(CHAR); \
  19:Include/benchmark.h **** } \
  20:Include/benchmark.h **** while(0)
  21:Include/benchmark.h **** 
  22:Include/benchmark.h **** 
  23:Include/benchmark.h **** /* Define ********************************************************************/
  24:Include/benchmark.h **** /* Types */
  25:Include/benchmark.h **** typedef signed int                          s32;
  26:Include/benchmark.h **** typedef signed short                        s16;
  27:Include/benchmark.h **** typedef signed char                         s8;
  28:Include/benchmark.h **** typedef unsigned int                        u32;
  29:Include/benchmark.h **** typedef unsigned short                      u16;
  30:Include/benchmark.h **** typedef unsigned char                       u8;
  31:Include/benchmark.h **** typedef s32                                 tid_t;
  32:Include/benchmark.h **** typedef u32                       			ptr_t;
  33:Include/benchmark.h **** typedef s32                       			cnt_t;
  34:Include/benchmark.h **** typedef s32 								cid_t;
  35:Include/benchmark.h **** typedef s32                        			ret_t;
  36:Include/benchmark.h **** 
  37:Include/benchmark.h **** #define BENCHMARK_STACK_SIZE 4096
  38:Include/benchmark.h **** /* System service stub */
  39:Include/benchmark.h **** #define RME_CAP_OP(OP,CAPID,ARG1,ARG2,ARG3) RME_Svc(((OP)<<(sizeof(ptr_t)*4)|(CAPID)),ARG1,ARG2,ARG
  40:Include/benchmark.h **** #define RME_PARAM_D_MASK                    (((ptr_t)(-1))>>(sizeof(ptr_t)*4))
  41:Include/benchmark.h **** #define RME_PARAM_Q_MASK                    (((ptr_t)(-1))>>(sizeof(ptr_t)*6))
  42:Include/benchmark.h **** #define RME_PARAM_O_MASK                    (((ptr_t)(-1))>>(sizeof(ptr_t)*7))
  43:Include/benchmark.h **** /* The parameter passing - not to be confused with kernel macros. These macros just place the param
  44:Include/benchmark.h **** #define RME_PARAM_D1(X)                     (((X)&RME_PARAM_D_MASK)<<(sizeof(ptr_t)*4))
  45:Include/benchmark.h **** #define RME_PARAM_D0(X)                     ((X)&RME_PARAM_D_MASK)
  46:Include/benchmark.h **** 
  47:Include/benchmark.h **** #define RME_PARAM_Q3(X)                     (((X)&RME_PARAM_Q_MASK)<<(sizeof(ptr_t)*6))
  48:Include/benchmark.h **** #define RME_PARAM_Q2(X)                     (((X)&RME_PARAM_Q_MASK)<<(sizeof(ptr_t)*4))
  49:Include/benchmark.h **** #define RME_PARAM_Q1(X)                     (((X)&RME_PARAM_Q_MASK)<<(sizeof(ptr_t)*2))
  50:Include/benchmark.h **** #define RME_PARAM_Q0(X)                     ((X)&RME_PARAM_Q_MASK)
  51:Include/benchmark.h **** 
  52:Include/benchmark.h **** #define RME_PARAM_O7(X)                     (((X)&RME_PARAM_O_MASK)<<(sizeof(ptr_t)*7))
  53:Include/benchmark.h **** #define RME_PARAM_O6(X)                     (((X)&RME_PARAM_O_MASK)<<(sizeof(ptr_t)*6))
  54:Include/benchmark.h **** #define RME_PARAM_O5(X)                     (((X)&RME_PARAM_O_MASK)<<(sizeof(ptr_t)*5))
  55:Include/benchmark.h **** #define RME_PARAM_O4(X)                     (((X)&RME_PARAM_O_MASK)<<(sizeof(ptr_t)*4))
  56:Include/benchmark.h **** #define RME_PARAM_O3(X)                     (((X)&RME_PARAM_O_MASK)<<(sizeof(ptr_t)*3))
  57:Include/benchmark.h **** #define RME_PARAM_O2(X)                     (((X)&RME_PARAM_O_MASK)<<(sizeof(ptr_t)*2))
  58:Include/benchmark.h **** #define RME_PARAM_O1(X)                     (((X)&RME_PARAM_O_MASK)<<(sizeof(ptr_t)*1))
  59:Include/benchmark.h **** #define RME_PARAM_O0(X)                     ((X)&RME_PARAM_O_MASK)
  60:Include/benchmark.h **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 3


  61:Include/benchmark.h **** /* Initial boot capabilities - This should be in accordnace with the kernel settings */
  62:Include/benchmark.h **** /* The capability table of the init process */
  63:Include/benchmark.h **** #define RME_BOOT_INIT_CPT                 		0
  64:Include/benchmark.h **** /* The top-level page table of the init process - always 4GB full range split into 8 pages */
  65:Include/benchmark.h **** #define RME_BOOT_INIT_PGT                 		1
  66:Include/benchmark.h **** /* The init process */
  67:Include/benchmark.h **** #define RME_BOOT_INIT_PRC                 		2
  68:Include/benchmark.h **** /* The init thread */
  69:Include/benchmark.h **** #define RME_BOOT_INIT_THD                 		3
  70:Include/benchmark.h **** /* The initial kernel function capability */
  71:Include/benchmark.h **** #define RME_BOOT_INIT_KFN          				4
  72:Include/benchmark.h **** /* The initial kernel memory capability */
  73:Include/benchmark.h **** #define RME_BOOT_INIT_KOM         				5
  74:Include/benchmark.h **** /* The initial timer endpoint */
  75:Include/benchmark.h **** #define RME_BOOT_INIT_TIMER      				6
  76:Include/benchmark.h **** /* The test objects */
  77:Include/benchmark.h **** #define RME_BOOT_BENCH_THD       				8
  78:Include/benchmark.h **** #define RME_BOOT_BENCH_PGT_TOP   				9
  79:Include/benchmark.h **** #define RME_BOOT_BENCH_PGT_SRAM  				10
  80:Include/benchmark.h **** /* The top-level page table of the init process's SRAM */
  81:Include/benchmark.h **** #define RME_BOOT_INIT_PGT_SRAM    				11
  82:Include/benchmark.h **** 
  83:Include/benchmark.h **** /* Power of 2 */
  84:Include/benchmark.h **** #define RME_FIELD(VAL,POW)                      (((ptr_t)(VAL))<<(POW))
  85:Include/benchmark.h **** #define RME_POW2(POW)                           RME_FIELD(1U,POW)
  86:Include/benchmark.h **** /* The order of bits in one CPU machine word */
  87:Include/benchmark.h **** #define RME_WORD_ORDER            				(5U)
  88:Include/benchmark.h **** /* Word size */
  89:Include/benchmark.h **** #define RME_WORD_BIT                            RME_POW2(RME_WORD_ORDER)
  90:Include/benchmark.h **** /* Need to export the memory frontier! */
  91:Include/benchmark.h **** /* Need to export the flags as well ! */
  92:Include/benchmark.h **** /* Export the errno too */
  93:Include/benchmark.h **** #define RME_BOOT_BENCH_KOM_FRONTIER 			0x00009000
  94:Include/benchmark.h **** /*The kernel-accessible virtual memory address,for this thread's register sets*/
  95:Include/benchmark.h **** #define RME_BOOT_HYPER_KOM_VADDR                       0x00000000
  96:Include/benchmark.h **** //0x10005000
  97:Include/benchmark.h **** /* The stack safe size */
  98:Include/benchmark.h **** #define RME_STACK_SAFE_SIZE 					16
  99:Include/benchmark.h **** /* Doesn't want to receive the scheduler signal for the thread */
 100:Include/benchmark.h **** #define RME_CID_NULL   							0x8000
 101:Include/benchmark.h **** /*The thread ID*/
 102:Include/benchmark.h **** #define RME_TID_1                               1
 103:Include/benchmark.h **** #define RME_TID_2                               2
 104:Include/benchmark.h **** #define RME_TID_3                               3
 105:Include/benchmark.h **** #define RME_TID_4                               4
 106:Include/benchmark.h **** #define RME_TID_6                               6
 107:Include/benchmark.h **** //#define RME_TSC() TIM2->CNT
 108:Include/benchmark.h **** 
 109:Include/benchmark.h **** /* End Define ****************************************************************/
 110:Include/benchmark.h **** 
 111:Include/benchmark.h **** 
 112:Include/benchmark.h **** 
 113:Include/benchmark.h **** /* Private Variables *********************************************************/
 114:Include/benchmark.h **** /* The stack of the threads - enough for 4 threads */
 115:Include/benchmark.h **** ptr_t RME_Stack[2048];
 116:Include/benchmark.h **** u16 Time[10000];
 117:Include/benchmark.h **** s8 RME_Bench_Buf[1024];
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 4


 118:Include/benchmark.h **** /* End Private Variables *****************************************************/
 119:Include/benchmark.h **** 
 120:Include/benchmark.h **** /* Function Prototypes *******************************************************/
 121:Include/benchmark.h **** extern ret_t RME_Svc(ptr_t Svc_Capid,ptr_t Param1, ptr_t Param2, ptr_t Param3);
 122:Include/benchmark.h **** extern cnt_t RME_Sprint_Uint(s8* Buffer,u32 Arg_Int);
 123:Include/benchmark.h **** extern void RME_Thd_Stub(void);
 124:Include/benchmark.h **** extern void RME_Inv_Stub(void);
 125:Include/benchmark.h **** ptr_t _RME_Stack_Init(ptr_t Stack, ptr_t Stub, ptr_t Param1, ptr_t Param2, ptr_t Param3, ptr_t Para
 126:Include/benchmark.h **** void RME_Benchmark(void);
 127:Include/benchmark.h **** void RME_Same_Prc_Thd_Switch_Test_Thd(ptr_t Param1);
 128:Include/benchmark.h **** void RME_Same_Prc_Thd_Switch_Test(void);
 129:Include/benchmark.h **** /* End Function Prototypes ***************************************************/
 130:Include/benchmark.h **** 
 131:Include/benchmark.h **** /* Function:__USR_Putchar *****************************************************
 132:Include/benchmark.h **** Description : Output a character to console. In Cortex-M, under most circumstances,
 133:Include/benchmark.h ****               we should use the ITM for such outputs.
 134:Include/benchmark.h **** Input       : char Char - The character to print.
 135:Include/benchmark.h **** Output      : None.
 136:Include/benchmark.h **** Return      : rme_ptr_t - Always 0.
 137:Include/benchmark.h **** ******************************************************************************/
 138:Include/benchmark.h **** ptr_t __USR_Putchar(char Char)
 139:Include/benchmark.h **** {
  50              		.loc 2 139 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 8
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55 0000 04B02DE5 		str	fp, [sp, #-4]!
  56              		.cfi_def_cfa_offset 4
  57              		.cfi_offset 11, -4
  58 0004 00B08DE2 		add	fp, sp, #0
  59              		.cfi_def_cfa_register 11
  60 0008 0CD04DE2 		sub	sp, sp, #12
  61 000c 0030A0E1 		mov	r3, r0
  62 0010 05304BE5 		strb	r3, [fp, #-5]
  63              	.L2:
 140:Include/benchmark.h ****     RME_A7A_PUTCHAR(Char);
  64              		.loc 2 140 5 discriminator 1
  65 0014 2C3001E3 		movw	r3, #4140
  66 0018 00304EE3 		movt	r3, 57344
  67 001c 003093E5 		ldr	r3, [r3]
  68 0020 083003E2 		and	r3, r3, #8
  69 0024 000053E3 		cmp	r3, #0
  70 0028 F9FFFF0A 		beq	.L2
  71              		.loc 2 140 5 is_stmt 0 discriminator 2
  72 002c 303001E3 		movw	r3, #4144
  73 0030 00304EE3 		movt	r3, 57344
  74 0034 D5205BE1 		ldrsb	r2, [fp, #-5]
  75 0038 002083E5 		str	r2, [r3]
 141:Include/benchmark.h ****     return 0;
  76              		.loc 2 141 12 is_stmt 1
  77 003c 0030A0E3 		mov	r3, #0
 142:Include/benchmark.h **** }
  78              		.loc 2 142 1
  79 0040 0300A0E1 		mov	r0, r3
  80 0044 00D08BE2 		add	sp, fp, #0
  81              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 5


  82              		@ sp needed
  83 0048 04B09DE4 		ldr	fp, [sp], #4
  84              		.cfi_restore 11
  85              		.cfi_def_cfa_offset 0
  86 004c 1EFF2FE1 		bx	lr
  87              		.cfi_endproc
  88              	.LFE0:
  90              		.section	.text.USR_DBG_I,"ax",%progbits
  91              		.align	2
  92              		.global	USR_DBG_I
  93              		.syntax unified
  94              		.arm
  96              	USR_DBG_I:
  97              	.LFB1:
 143:Include/benchmark.h **** /* End Function __USR_Putchar ***************************************************/
 144:Include/benchmark.h **** 
 145:Include/benchmark.h **** 
 146:Include/benchmark.h **** /* Function:USR_DBG_I *****************************************************
 147:Include/benchmark.h **** Description : Print a signed integer on the debugging console. This integer is
 148:Include/benchmark.h ****               printed as decimal with sign.
 149:Include/benchmark.h **** Input       : rme_cnt_t Int - The integer to print.
 150:Include/benchmark.h **** Output      : None.
 151:Include/benchmark.h **** Return      : rme_cnt_t - The length of the string printed.
 152:Include/benchmark.h **** ******************************************************************************/
 153:Include/benchmark.h **** cnt_t USR_DBG_I(cnt_t Int)
 154:Include/benchmark.h **** {
  98              		.loc 2 154 1
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 32
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0000 00482DE9 		push	{fp, lr}
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 11, -8
 105              		.cfi_offset 14, -4
 106 0004 04B08DE2 		add	fp, sp, #4
 107              		.cfi_def_cfa 11, 4
 108 0008 20D04DE2 		sub	sp, sp, #32
 109 000c 20000BE5 		str	r0, [fp, #-32]
 155:Include/benchmark.h ****     cnt_t Num;
 156:Include/benchmark.h ****     cnt_t Abs;
 157:Include/benchmark.h ****     cnt_t Iter;
 158:Include/benchmark.h ****     cnt_t Count;
 159:Include/benchmark.h ****     cnt_t Div;
 160:Include/benchmark.h **** 
 161:Include/benchmark.h ****     /* Exit on zero */
 162:Include/benchmark.h ****     if(Int==0)
 110              		.loc 2 162 7
 111 0010 20301BE5 		ldr	r3, [fp, #-32]
 112 0014 000053E3 		cmp	r3, #0
 113 0018 0300001A 		bne	.L5
 163:Include/benchmark.h ****     {
 164:Include/benchmark.h **** 
 165:Include/benchmark.h **** 
 166:Include/benchmark.h ****         __USR_Putchar('0');
 114              		.loc 2 166 9
 115 001c 3000A0E3 		mov	r0, #48
 116 0020 FEFFFFEB 		bl	__USR_Putchar
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 6


 167:Include/benchmark.h ****         return 1;
 117              		.loc 2 167 16
 118 0024 0130A0E3 		mov	r3, #1
 119 0028 500000EA 		b	.L6
 120              	.L5:
 168:Include/benchmark.h ****     }
 169:Include/benchmark.h ****     else
 170:Include/benchmark.h ****     {
 171:Include/benchmark.h **** 
 172:Include/benchmark.h ****         /* No action required */
 173:Include/benchmark.h ****     }
 174:Include/benchmark.h **** 
 175:Include/benchmark.h **** 
 176:Include/benchmark.h ****     /* Correct all negatives into positives */
 177:Include/benchmark.h ****     if(Int<0)
 121              		.loc 2 177 7
 122 002c 20301BE5 		ldr	r3, [fp, #-32]
 123 0030 000053E3 		cmp	r3, #0
 124 0034 070000AA 		bge	.L7
 178:Include/benchmark.h ****     {
 179:Include/benchmark.h **** 
 180:Include/benchmark.h **** 
 181:Include/benchmark.h ****         __USR_Putchar('-');
 125              		.loc 2 181 9
 126 0038 2D00A0E3 		mov	r0, #45
 127 003c FEFFFFEB 		bl	__USR_Putchar
 182:Include/benchmark.h ****         Abs=-Int;
 128              		.loc 2 182 12
 129 0040 20301BE5 		ldr	r3, [fp, #-32]
 130 0044 003063E2 		rsb	r3, r3, #0
 131 0048 0C300BE5 		str	r3, [fp, #-12]
 183:Include/benchmark.h ****         Num=1;
 132              		.loc 2 183 12
 133 004c 0130A0E3 		mov	r3, #1
 134 0050 08300BE5 		str	r3, [fp, #-8]
 135 0054 030000EA 		b	.L8
 136              	.L7:
 184:Include/benchmark.h ****     }
 185:Include/benchmark.h ****     else
 186:Include/benchmark.h ****     {
 187:Include/benchmark.h **** 
 188:Include/benchmark.h **** 
 189:Include/benchmark.h ****         Abs=Int;
 137              		.loc 2 189 12
 138 0058 20301BE5 		ldr	r3, [fp, #-32]
 139 005c 0C300BE5 		str	r3, [fp, #-12]
 190:Include/benchmark.h ****         Num=0;
 140              		.loc 2 190 12
 141 0060 0030A0E3 		mov	r3, #0
 142 0064 08300BE5 		str	r3, [fp, #-8]
 143              	.L8:
 191:Include/benchmark.h ****     }
 192:Include/benchmark.h **** 
 193:Include/benchmark.h ****     /* How many digits are there? */
 194:Include/benchmark.h ****     Count=0;
 144              		.loc 2 194 10
 145 0068 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 7


 146 006c 14300BE5 		str	r3, [fp, #-20]
 195:Include/benchmark.h ****     Div=1;
 147              		.loc 2 195 8
 148 0070 0130A0E3 		mov	r3, #1
 149 0074 18300BE5 		str	r3, [fp, #-24]
 196:Include/benchmark.h ****     Iter=Abs;
 150              		.loc 2 196 9
 151 0078 0C301BE5 		ldr	r3, [fp, #-12]
 152 007c 10300BE5 		str	r3, [fp, #-16]
 153              	.L12:
 197:Include/benchmark.h ****     while(1U)
 198:Include/benchmark.h ****     {
 199:Include/benchmark.h ****         Iter/=10;
 154              		.loc 2 199 13
 155 0080 10201BE5 		ldr	r2, [fp, #-16]
 156 0084 673606E3 		movw	r3, #26215
 157 0088 663646E3 		movt	r3, 26214
 158 008c 9312C3E0 		smull	r1, r3, r3, r2
 159 0090 4311A0E1 		asr	r1, r3, #2
 160 0094 C23FA0E1 		asr	r3, r2, #31
 161 0098 033041E0 		sub	r3, r1, r3
 162 009c 10300BE5 		str	r3, [fp, #-16]
 200:Include/benchmark.h ****         Count++;
 163              		.loc 2 200 14
 164 00a0 14301BE5 		ldr	r3, [fp, #-20]
 165 00a4 013083E2 		add	r3, r3, #1
 166 00a8 14300BE5 		str	r3, [fp, #-20]
 201:Include/benchmark.h ****         if(Iter!=0)
 167              		.loc 2 201 11
 168 00ac 10301BE5 		ldr	r3, [fp, #-16]
 169 00b0 000053E3 		cmp	r3, #0
 170 00b4 0600000A 		beq	.L15
 202:Include/benchmark.h ****         {
 203:Include/benchmark.h **** 
 204:Include/benchmark.h **** 
 205:Include/benchmark.h ****             Div*=10;
 171              		.loc 2 205 16
 172 00b8 18201BE5 		ldr	r2, [fp, #-24]
 173 00bc 0230A0E1 		mov	r3, r2
 174 00c0 0331A0E1 		lsl	r3, r3, #2
 175 00c4 023083E0 		add	r3, r3, r2
 176 00c8 8330A0E1 		lsl	r3, r3, #1
 177 00cc 18300BE5 		str	r3, [fp, #-24]
 199:Include/benchmark.h ****         Count++;
 178              		.loc 2 199 13
 179 00d0 EAFFFFEA 		b	.L12
 180              	.L15:
 206:Include/benchmark.h ****         }
 207:Include/benchmark.h ****         else
 208:Include/benchmark.h ****         {
 209:Include/benchmark.h **** 
 210:Include/benchmark.h **** 
 211:Include/benchmark.h ****             break;
 181              		.loc 2 211 13
 182 00d4 00F020E3 		nop
 212:Include/benchmark.h ****         }
 213:Include/benchmark.h ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 8


 214:Include/benchmark.h ****     Num+=Count;
 183              		.loc 2 214 8
 184 00d8 08201BE5 		ldr	r2, [fp, #-8]
 185 00dc 14301BE5 		ldr	r3, [fp, #-20]
 186 00e0 033082E0 		add	r3, r2, r3
 187 00e4 08300BE5 		str	r3, [fp, #-8]
 215:Include/benchmark.h **** 
 216:Include/benchmark.h ****     /* Print the integer */
 217:Include/benchmark.h ****     Iter=Abs;
 188              		.loc 2 217 9
 189 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 190 00ec 10300BE5 		str	r3, [fp, #-16]
 218:Include/benchmark.h **** 
 219:Include/benchmark.h ****     while(Count>0)
 191              		.loc 2 219 10
 192 00f0 1A0000EA 		b	.L13
 193              	.L14:
 220:Include/benchmark.h ****     {
 221:Include/benchmark.h ****         Count--;
 194              		.loc 2 221 14
 195 00f4 14301BE5 		ldr	r3, [fp, #-20]
 196 00f8 013043E2 		sub	r3, r3, #1
 197 00fc 14300BE5 		str	r3, [fp, #-20]
 222:Include/benchmark.h ****         __USR_Putchar((s8)(Iter/Div)+'0');
 198              		.loc 2 222 32
 199 0100 18101BE5 		ldr	r1, [fp, #-24]
 200 0104 10001BE5 		ldr	r0, [fp, #-16]
 201 0108 FEFFFFEB 		bl	__aeabi_idiv
 202 010c 0030A0E1 		mov	r3, r0
 203              		.loc 2 222 23
 204 0110 7330EFE6 		uxtb	r3, r3
 205              		.loc 2 222 37
 206 0114 303083E2 		add	r3, r3, #48
 207 0118 7330EFE6 		uxtb	r3, r3
 208              		.loc 2 222 9
 209 011c 7330AFE6 		sxtb	r3, r3
 210 0120 0300A0E1 		mov	r0, r3
 211 0124 FEFFFFEB 		bl	__USR_Putchar
 223:Include/benchmark.h ****         Iter=Iter%Div;
 212              		.loc 2 223 13
 213 0128 10301BE5 		ldr	r3, [fp, #-16]
 214 012c 18101BE5 		ldr	r1, [fp, #-24]
 215 0130 0300A0E1 		mov	r0, r3
 216 0134 FEFFFFEB 		bl	__aeabi_idivmod
 217 0138 0130A0E1 		mov	r3, r1
 218 013c 10300BE5 		str	r3, [fp, #-16]
 224:Include/benchmark.h ****         Div/=10;
 219              		.loc 2 224 12
 220 0140 18201BE5 		ldr	r2, [fp, #-24]
 221 0144 673606E3 		movw	r3, #26215
 222 0148 663646E3 		movt	r3, 26214
 223 014c 9312C3E0 		smull	r1, r3, r3, r2
 224 0150 4311A0E1 		asr	r1, r3, #2
 225 0154 C23FA0E1 		asr	r3, r2, #31
 226 0158 033041E0 		sub	r3, r1, r3
 227 015c 18300BE5 		str	r3, [fp, #-24]
 228              	.L13:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 9


 219:Include/benchmark.h ****     {
 229              		.loc 2 219 16
 230 0160 14301BE5 		ldr	r3, [fp, #-20]
 231 0164 000053E3 		cmp	r3, #0
 232 0168 E1FFFFCA 		bgt	.L14
 225:Include/benchmark.h ****     }
 226:Include/benchmark.h **** 
 227:Include/benchmark.h ****     return Num;
 233              		.loc 2 227 12
 234 016c 08301BE5 		ldr	r3, [fp, #-8]
 235              	.L6:
 228:Include/benchmark.h **** }
 236              		.loc 2 228 1
 237 0170 0300A0E1 		mov	r0, r3
 238 0174 04D04BE2 		sub	sp, fp, #4
 239              		.cfi_def_cfa 13, 8
 240              		@ sp needed
 241 0178 0088BDE8 		pop	{fp, pc}
 242              		.cfi_endproc
 243              	.LFE1:
 245              		.section	.text.USR_DBG_H,"ax",%progbits
 246              		.align	2
 247              		.global	USR_DBG_H
 248              		.syntax unified
 249              		.arm
 251              	USR_DBG_H:
 252              	.LFB2:
 229:Include/benchmark.h **** /* End Function:USR_DBG_I ************************************************/
 230:Include/benchmark.h **** 
 231:Include/benchmark.h **** /* Function:USR_DBG_H *****************************************************
 232:Include/benchmark.h **** Description : Print a unsigned integer on the debugging console. This integer is
 233:Include/benchmark.h ****               printed as hexadecimal.
 234:Include/benchmark.h **** Input       : rme_ptr_t Uint - The unsigned integer to print.
 235:Include/benchmark.h **** Output      : None.
 236:Include/benchmark.h **** Return      : rme_cnt_t - The length of the string printed.
 237:Include/benchmark.h **** ******************************************************************************/
 238:Include/benchmark.h **** cnt_t USR_DBG_H(ptr_t Uint)
 239:Include/benchmark.h **** {
 253              		.loc 2 239 1
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 24
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 00482DE9 		push	{fp, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 11, -8
 260              		.cfi_offset 14, -4
 261 0004 04B08DE2 		add	fp, sp, #4
 262              		.cfi_def_cfa 11, 4
 263 0008 18D04DE2 		sub	sp, sp, #24
 264 000c 18000BE5 		str	r0, [fp, #-24]
 240:Include/benchmark.h ****     ptr_t Iter;
 241:Include/benchmark.h ****     ptr_t Count;
 242:Include/benchmark.h ****     ptr_t Num;
 243:Include/benchmark.h **** 
 244:Include/benchmark.h ****     /* Exit on zero */
 245:Include/benchmark.h ****     if(Uint==0U)
 265              		.loc 2 245 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 10


 266 0010 18301BE5 		ldr	r3, [fp, #-24]
 267 0014 000053E3 		cmp	r3, #0
 268 0018 0300001A 		bne	.L17
 246:Include/benchmark.h ****     {
 247:Include/benchmark.h ****         __USR_Putchar('0');
 269              		.loc 2 247 9
 270 001c 3000A0E3 		mov	r0, #48
 271 0020 FEFFFFEB 		bl	__USR_Putchar
 248:Include/benchmark.h ****         return 1;
 272              		.loc 2 248 16
 273 0024 0130A0E3 		mov	r3, #1
 274 0028 330000EA 		b	.L18
 275              	.L17:
 249:Include/benchmark.h ****     }
 250:Include/benchmark.h ****     else
 251:Include/benchmark.h ****     {
 252:Include/benchmark.h ****         /* No action required */
 253:Include/benchmark.h ****     }
 254:Include/benchmark.h **** 
 255:Include/benchmark.h ****     /* Filter out all the zeroes */
 256:Include/benchmark.h ****     Count=0U;
 276              		.loc 2 256 10
 277 002c 0030A0E3 		mov	r3, #0
 278 0030 0C300BE5 		str	r3, [fp, #-12]
 257:Include/benchmark.h ****     Iter=Uint;
 279              		.loc 2 257 9
 280 0034 18301BE5 		ldr	r3, [fp, #-24]
 281 0038 08300BE5 		str	r3, [fp, #-8]
 258:Include/benchmark.h ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 282              		.loc 2 258 10
 283 003c 050000EA 		b	.L19
 284              	.L20:
 259:Include/benchmark.h ****     {
 260:Include/benchmark.h ****         Iter<<=4;
 285              		.loc 2 260 13
 286 0040 08301BE5 		ldr	r3, [fp, #-8]
 287 0044 0332A0E1 		lsl	r3, r3, #4
 288 0048 08300BE5 		str	r3, [fp, #-8]
 261:Include/benchmark.h ****         Count++;
 289              		.loc 2 261 14
 290 004c 0C301BE5 		ldr	r3, [fp, #-12]
 291 0050 013083E2 		add	r3, r3, #1
 292 0054 0C300BE5 		str	r3, [fp, #-12]
 293              	.L19:
 258:Include/benchmark.h ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 294              		.loc 2 258 16
 295 0058 08301BE5 		ldr	r3, [fp, #-8]
 296 005c 233EA0E1 		lsr	r3, r3, #28
 258:Include/benchmark.h ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 297              		.loc 2 258 36
 298 0060 000053E3 		cmp	r3, #0
 299 0064 F5FFFF0A 		beq	.L20
 262:Include/benchmark.h ****     }
 263:Include/benchmark.h **** 
 264:Include/benchmark.h ****     /* Count is the number of pts to print */
 265:Include/benchmark.h ****     Count=RME_POW2(RME_WORD_ORDER-2U)-Count;
 300              		.loc 2 265 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 11


 301 0068 0C301BE5 		ldr	r3, [fp, #-12]
 302 006c 083063E2 		rsb	r3, r3, #8
 303 0070 0C300BE5 		str	r3, [fp, #-12]
 266:Include/benchmark.h ****     Num=Count;
 304              		.loc 2 266 8
 305 0074 0C301BE5 		ldr	r3, [fp, #-12]
 306 0078 10300BE5 		str	r3, [fp, #-16]
 267:Include/benchmark.h ****     while(Count>0U)
 307              		.loc 2 267 10
 308 007c 1A0000EA 		b	.L21
 309              	.L23:
 268:Include/benchmark.h ****     {
 269:Include/benchmark.h ****         Count--;
 310              		.loc 2 269 14
 311 0080 0C301BE5 		ldr	r3, [fp, #-12]
 312 0084 013043E2 		sub	r3, r3, #1
 313 0088 0C300BE5 		str	r3, [fp, #-12]
 270:Include/benchmark.h ****         Iter=(Uint>>(Count<<2U))&0x0FU;
 314              		.loc 2 270 27
 315 008c 0C301BE5 		ldr	r3, [fp, #-12]
 316 0090 0331A0E1 		lsl	r3, r3, #2
 317              		.loc 2 270 19
 318 0094 18201BE5 		ldr	r2, [fp, #-24]
 319 0098 3233A0E1 		lsr	r3, r2, r3
 320              		.loc 2 270 13
 321 009c 0F3003E2 		and	r3, r3, #15
 322 00a0 08300BE5 		str	r3, [fp, #-8]
 271:Include/benchmark.h ****         if(Iter<10U)
 323              		.loc 2 271 11
 324 00a4 08301BE5 		ldr	r3, [fp, #-8]
 325 00a8 090053E3 		cmp	r3, #9
 326 00ac 0700008A 		bhi	.L22
 272:Include/benchmark.h ****         {
 273:Include/benchmark.h **** 
 274:Include/benchmark.h ****             __USR_Putchar((s8)Iter+'0');
 327              		.loc 2 274 27
 328 00b0 08301BE5 		ldr	r3, [fp, #-8]
 329 00b4 7330EFE6 		uxtb	r3, r3
 330              		.loc 2 274 35
 331 00b8 303083E2 		add	r3, r3, #48
 332 00bc 7330EFE6 		uxtb	r3, r3
 333              		.loc 2 274 13
 334 00c0 7330AFE6 		sxtb	r3, r3
 335 00c4 0300A0E1 		mov	r0, r3
 336 00c8 FEFFFFEB 		bl	__USR_Putchar
 337 00cc 060000EA 		b	.L21
 338              	.L22:
 275:Include/benchmark.h ****         }
 276:Include/benchmark.h ****         else
 277:Include/benchmark.h ****         {
 278:Include/benchmark.h **** 
 279:Include/benchmark.h ****             __USR_Putchar((s8)Iter+'A'-10);
 339              		.loc 2 279 27
 340 00d0 08301BE5 		ldr	r3, [fp, #-8]
 341 00d4 7330EFE6 		uxtb	r3, r3
 342              		.loc 2 279 39
 343 00d8 373083E2 		add	r3, r3, #55
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 12


 344 00dc 7330EFE6 		uxtb	r3, r3
 345              		.loc 2 279 13
 346 00e0 7330AFE6 		sxtb	r3, r3
 347 00e4 0300A0E1 		mov	r0, r3
 348 00e8 FEFFFFEB 		bl	__USR_Putchar
 349              	.L21:
 267:Include/benchmark.h ****     {
 350              		.loc 2 267 16
 351 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 352 00f0 000053E3 		cmp	r3, #0
 353 00f4 E1FFFF1A 		bne	.L23
 280:Include/benchmark.h ****         }
 281:Include/benchmark.h ****     }
 282:Include/benchmark.h **** 
 283:Include/benchmark.h ****     return (cnt_t)Num;
 354              		.loc 2 283 12
 355 00f8 10301BE5 		ldr	r3, [fp, #-16]
 356              	.L18:
 284:Include/benchmark.h **** }
 357              		.loc 2 284 1
 358 00fc 0300A0E1 		mov	r0, r3
 359 0100 04D04BE2 		sub	sp, fp, #4
 360              		.cfi_def_cfa 13, 8
 361              		@ sp needed
 362 0104 0088BDE8 		pop	{fp, pc}
 363              		.cfi_endproc
 364              	.LFE2:
 366              		.section	.text.USR_DBG_S,"ax",%progbits
 367              		.align	2
 368              		.global	USR_DBG_S
 369              		.syntax unified
 370              		.arm
 372              	USR_DBG_S:
 373              	.LFB3:
 285:Include/benchmark.h **** /* End Function:USR_DBG_H ************************************************/
 286:Include/benchmark.h **** cnt_t USR_DBG_S(const s8* String)
 287:Include/benchmark.h **** {
 374              		.loc 2 287 1
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 16
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378 0000 00482DE9 		push	{fp, lr}
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 11, -8
 381              		.cfi_offset 14, -4
 382 0004 04B08DE2 		add	fp, sp, #4
 383              		.cfi_def_cfa 11, 4
 384 0008 10D04DE2 		sub	sp, sp, #16
 385 000c 10000BE5 		str	r0, [fp, #-16]
 288:Include/benchmark.h ****     ptr_t Count;
 289:Include/benchmark.h **** 
 290:Include/benchmark.h ****     for(Count=0U;Count<255;Count++)
 386              		.loc 2 290 14
 387 0010 0030A0E3 		mov	r3, #0
 388 0014 08300BE5 		str	r3, [fp, #-8]
 389              		.loc 2 290 5
 390 0018 0E0000EA 		b	.L25
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 13


 391              	.L28:
 291:Include/benchmark.h ****     {
 292:Include/benchmark.h ****         if(String[Count]==(s8)'\0')
 392              		.loc 2 292 18
 393 001c 10201BE5 		ldr	r2, [fp, #-16]
 394 0020 08301BE5 		ldr	r3, [fp, #-8]
 395 0024 033082E0 		add	r3, r2, r3
 396 0028 D030D3E1 		ldrsb	r3, [r3]
 397              		.loc 2 292 11
 398 002c 000053E3 		cmp	r3, #0
 399 0030 0C00000A 		beq	.L30
 293:Include/benchmark.h ****         {
 294:Include/benchmark.h **** 
 295:Include/benchmark.h ****             break;
 296:Include/benchmark.h ****         }
 297:Include/benchmark.h ****         else
 298:Include/benchmark.h ****         {
 299:Include/benchmark.h ****             /* No action required */
 300:Include/benchmark.h ****         }
 301:Include/benchmark.h **** 
 302:Include/benchmark.h ****         __USR_Putchar(String[Count]);
 400              		.loc 2 302 29
 401 0034 10201BE5 		ldr	r2, [fp, #-16]
 402 0038 08301BE5 		ldr	r3, [fp, #-8]
 403 003c 033082E0 		add	r3, r2, r3
 404              		.loc 2 302 9
 405 0040 D030D3E1 		ldrsb	r3, [r3]
 406 0044 0300A0E1 		mov	r0, r3
 407 0048 FEFFFFEB 		bl	__USR_Putchar
 290:Include/benchmark.h ****     {
 408              		.loc 2 290 33 discriminator 2
 409 004c 08301BE5 		ldr	r3, [fp, #-8]
 410 0050 013083E2 		add	r3, r3, #1
 411 0054 08300BE5 		str	r3, [fp, #-8]
 412              	.L25:
 290:Include/benchmark.h ****     {
 413              		.loc 2 290 23 discriminator 1
 414 0058 08301BE5 		ldr	r3, [fp, #-8]
 415 005c FE0053E3 		cmp	r3, #254
 416 0060 EDFFFF9A 		bls	.L28
 417 0064 000000EA 		b	.L27
 418              	.L30:
 295:Include/benchmark.h ****         }
 419              		.loc 2 295 13
 420 0068 00F020E3 		nop
 421              	.L27:
 303:Include/benchmark.h ****     }
 304:Include/benchmark.h **** 
 305:Include/benchmark.h ****     return (cnt_t)Count;
 422              		.loc 2 305 12
 423 006c 08301BE5 		ldr	r3, [fp, #-8]
 306:Include/benchmark.h **** }
 424              		.loc 2 306 1
 425 0070 0300A0E1 		mov	r0, r3
 426 0074 04D04BE2 		sub	sp, fp, #4
 427              		.cfi_def_cfa 13, 8
 428              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 14


 429 0078 0088BDE8 		pop	{fp, pc}
 430              		.cfi_endproc
 431              	.LFE3:
 433              		.section	.text._RME_Tsc_Init,"ax",%progbits
 434              		.align	2
 435              		.global	_RME_Tsc_Init
 436              		.syntax unified
 437              		.arm
 439              	_RME_Tsc_Init:
 440              	.LFB4:
   1:Source/rme_benchmark.c **** /******************************************************************************
   2:Source/rme_benchmark.c **** Filename    : benchmark.c
   3:Source/rme_benchmark.c **** Author      : pry
   4:Source/rme_benchmark.c **** Date        : 04/09/2017
   5:Source/rme_benchmark.c **** Licence     : The Unlicense; see LICENSE for details.
   6:Source/rme_benchmark.c **** Description : The benchmark file for RME.
   7:Source/rme_benchmark.c **** ******************************************************************************/
   8:Source/rme_benchmark.c **** 
   9:Source/rme_benchmark.c **** /* Include *******************************************************************/
  10:Source/rme_benchmark.c **** #include"benchmark.h"
  11:Source/rme_benchmark.c **** /* Need to export error codes, and size of each object, in words! */
  12:Source/rme_benchmark.c **** /* End Include ***************************************************************/
  13:Source/rme_benchmark.c **** 
  14:Source/rme_benchmark.c **** /* Function:_RME_Tsc_Init *****************************************************
  15:Source/rme_benchmark.c **** Description : The initialization of timestamp counter. 19 secs before overflowing.
  16:Source/rme_benchmark.c **** Input       : None.
  17:Source/rme_benchmark.c **** Output      : None.
  18:Source/rme_benchmark.c **** Return      : None.
  19:Source/rme_benchmark.c **** ******************************************************************************/
  20:Source/rme_benchmark.c **** void _RME_Tsc_Init(void)
  21:Source/rme_benchmark.c **** {
 441              		.loc 1 21 1
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 04B02DE5 		str	fp, [sp, #-4]!
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 11, -4
 449 0004 00B08DE2 		add	fp, sp, #0
 450              		.cfi_def_cfa_register 11
  22:Source/rme_benchmark.c **** //    TIM_HandleTypeDef TIM2_Handle;
  23:Source/rme_benchmark.c **** //    
  24:Source/rme_benchmark.c **** //    /* Initialize timer 2 to run at the same speed as the CPU */
  25:Source/rme_benchmark.c **** //    TIM2_Handle.Instance=TIM2;
  26:Source/rme_benchmark.c **** //    TIM2_Handle.Init.Prescaler=0;
  27:Source/rme_benchmark.c **** //    TIM2_Handle.Init.CounterMode=TIM_COUNTERMODE_UP;
  28:Source/rme_benchmark.c **** //    TIM2_Handle.Init.Period=(ptr_t)(-1);
  29:Source/rme_benchmark.c **** //    TIM2_Handle.Init.ClockDivision=TIM_CLOCKDIVISION_DIV1;
  30:Source/rme_benchmark.c **** //    HAL_TIM_Base_Init(&TIM2_Handle);
  31:Source/rme_benchmark.c **** //    __HAL_RCC_TIM2_CLK_ENABLE();
  32:Source/rme_benchmark.c **** //    __HAL_TIM_ENABLE(&TIM2_Handle);
  33:Source/rme_benchmark.c **** }
 451              		.loc 1 33 1
 452 0008 00F020E3 		nop
 453 000c 00D08BE2 		add	sp, fp, #0
 454              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 15


 455              		@ sp needed
 456 0010 04B09DE4 		ldr	fp, [sp], #4
 457              		.cfi_restore 11
 458              		.cfi_def_cfa_offset 0
 459 0014 1EFF2FE1 		bx	lr
 460              		.cfi_endproc
 461              	.LFE4:
 463              		.section	.rodata
 464              		.align	2
 465              	.LC0:
 466 0000 0D0A2068 		.ascii	"\015\012 hello! this is thread \000"
 466      656C6C6F 
 466      21207468 
 466      69732069 
 466      73207468 
 467              		.section	.text.RME_Same_Prc_Thd_Switch_Test_Thd,"ax",%progbits
 468              		.align	2
 469              		.global	RME_Same_Prc_Thd_Switch_Test_Thd
 470              		.syntax unified
 471              		.arm
 473              	RME_Same_Prc_Thd_Switch_Test_Thd:
 474              	.LFB5:
  34:Source/rme_benchmark.c **** /* End Function:_RME_Tsc_Init ************************************************/
  35:Source/rme_benchmark.c **** 
  36:Source/rme_benchmark.c **** /* Function:RME_Same_Prc_Thd_Switch_Test_Thd *********************************
  37:Source/rme_benchmark.c **** Description : The thread for testing same-process thread switching performance.
  38:Source/rme_benchmark.c **** Input       : None.
  39:Source/rme_benchmark.c **** Output      : None.
  40:Source/rme_benchmark.c **** Return      : None.
  41:Source/rme_benchmark.c **** ******************************************************************************/
  42:Source/rme_benchmark.c **** void RME_Same_Prc_Thd_Switch_Test_Thd(ptr_t Param1)
  43:Source/rme_benchmark.c **** {
 475              		.loc 1 43 1
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 16
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479 0000 00482DE9 		push	{fp, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 11, -8
 482              		.cfi_offset 14, -4
 483 0004 04B08DE2 		add	fp, sp, #4
 484              		.cfi_def_cfa 11, 4
 485 0008 10D04DE2 		sub	sp, sp, #16
 486 000c 10000BE5 		str	r0, [fp, #-16]
  44:Source/rme_benchmark.c ****     ret_t Retval;
  45:Source/rme_benchmark.c **** 
  46:Source/rme_benchmark.c ****     USR_DBG_S("\r\n hello! this is thread ");
 487              		.loc 1 46 5
 488 0010 000000E3 		movw	r0, #:lower16:.LC0
 489 0014 000040E3 		movt	r0, #:upper16:.LC0
 490 0018 FEFFFFEB 		bl	USR_DBG_S
  47:Source/rme_benchmark.c ****     USR_DBG_I(Param1);
 491              		.loc 1 47 5
 492 001c 10301BE5 		ldr	r3, [fp, #-16]
 493 0020 0300A0E1 		mov	r0, r3
 494 0024 FEFFFFEB 		bl	USR_DBG_I
 495              	.L33:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 16


  48:Source/rme_benchmark.c ****     /* Now we switch back to the init thread, immediately */
  49:Source/rme_benchmark.c ****     while(1)
  50:Source/rme_benchmark.c ****     {
  51:Source/rme_benchmark.c ****         Retval=RME_CAP_OP(RME_SVC_THD_SWT,0,
 496              		.loc 1 51 16 discriminator 1
 497 0028 0030A0E3 		mov	r3, #0
 498 002c 0020A0E3 		mov	r2, #0
 499 0030 0310A0E3 		mov	r1, #3
 500 0034 0908A0E3 		mov	r0, #589824
 501 0038 FEFFFFEB 		bl	RME_Svc
 502 003c 08000BE5 		str	r0, [fp, #-8]
 503              		.loc 1 51 15
 504 0040 F8FFFFEA 		b	.L33
 505              		.cfi_endproc
 506              	.LFE5:
 508              		.section	.rodata
 509 001a 0000     		.align	2
 510              	.LC1:
 511 001c 0D0A2870 		.ascii	"\015\012(ptr_t)(&RME_Stack[2047])= \000"
 511      74725F74 
 511      29282652 
 511      4D455F53 
 511      7461636B 
 512 003a 0000     		.align	2
 513              	.LC2:
 514 003c 0D0A496E 		.ascii	"\015\012Initialize the thread's stack Stack_Addr= \000"
 514      69746961 
 514      6C697A65 
 514      20746865 
 514      20746872 
 515 0069 000000   		.align	2
 516              	.LC3:
 517 006c 0D0A6372 		.ascii	"\015\012create a thread      retval= \000"
 517      65617465 
 517      20612074 
 517      68726561 
 517      64202020 
 518              		.align	2
 519              	.LC4:
 520 008c 0D0A4269 		.ascii	"\015\012Bind the thread to the processor retval= \000"
 520      6E642074 
 520      68652074 
 520      68726561 
 520      6420746F 
 521              		.align	2
 522              	.LC5:
 523 00b8 0D0A5365 		.ascii	"\015\012Set the execution information retval= \000"
 523      74207468 
 523      65206578 
 523      65637574 
 523      696F6E20 
 524 00e1 000000   		.align	2
 525              	.LC6:
 526 00e4 0D0A00   		.ascii	"\015\012\000"
 527 00e7 00       		.align	2
 528              	.LC7:
 529 00e8 0D0A5472 		.ascii	"\015\012Try to switch to that thread - should fail "
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 17


 529      7920746F 
 529      20737769 
 529      74636820 
 529      746F2074 
 530 0115 20726574 		.ascii	" retval= \000"
 530      76616C3D 
 530      2000
 531 011f 00       		.align	2
 532              	.LC8:
 533 0120 0D0A5472 		.ascii	"\015\012Try to switch to that thread  retval= \000"
 533      7920746F 
 533      20737769 
 533      74636820 
 533      746F2074 
 534              		.section	.text.RME_Same_Prc_Thd_Switch_Test,"ax",%progbits
 535              		.align	2
 536              		.global	RME_Same_Prc_Thd_Switch_Test
 537              		.syntax unified
 538              		.arm
 540              	RME_Same_Prc_Thd_Switch_Test:
 541              	.LFB6:
  52:Source/rme_benchmark.c ****                           RME_BOOT_INIT_THD,
  53:Source/rme_benchmark.c ****                           0,
  54:Source/rme_benchmark.c ****                           0);
  55:Source/rme_benchmark.c ****     }
  56:Source/rme_benchmark.c **** }
  57:Source/rme_benchmark.c **** /* End Function:RME_Same_Prc_Thd_Switch_Test_Thd ****************************/
  58:Source/rme_benchmark.c **** 
  59:Source/rme_benchmark.c **** /* Function:RME_Same_Prc_Thd_Switch_Test *************************************
  60:Source/rme_benchmark.c **** Description : The same-process thread switch test code.
  61:Source/rme_benchmark.c **** Input       : None.
  62:Source/rme_benchmark.c **** Output      : None.
  63:Source/rme_benchmark.c **** Return      : None.
  64:Source/rme_benchmark.c **** ******************************************************************************/
  65:Source/rme_benchmark.c **** void RME_Same_Prc_Thd_Switch_Test(void)
  66:Source/rme_benchmark.c **** {
 542              		.loc 1 66 1
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 16
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546 0000 00482DE9 		push	{fp, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 11, -8
 549              		.cfi_offset 14, -4
 550 0004 04B08DE2 		add	fp, sp, #4
 551              		.cfi_def_cfa 11, 4
 552 0008 10D04DE2 		sub	sp, sp, #16
  67:Source/rme_benchmark.c ****     /* Intra-process thread switching time */
  68:Source/rme_benchmark.c ****     ret_t Retval;
  69:Source/rme_benchmark.c ****     cnt_t Count;
  70:Source/rme_benchmark.c ****     ptr_t Stack_Addr;
  71:Source/rme_benchmark.c ****     ptr_t Temp;
  72:Source/rme_benchmark.c ****     /* Initialize the thread's stack before entering it */
  73:Source/rme_benchmark.c ****     Stack_Addr=(ptr_t)&RME_Stack[2000];/* _RME_Stack_Init((ptr_t)(&RME_Stack[2047]),
 553              		.loc 1 73 15
 554 000c 90319FE5 		ldr	r3, .L38
 555 0010 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 18


  74:Source/rme_benchmark.c ****                                (ptr_t)RME_Thd_Stub,
  75:Source/rme_benchmark.c ****                                1, 2, 3, 4); */
  76:Source/rme_benchmark.c **** 
  77:Source/rme_benchmark.c ****     USR_DBG_S("\r\n(ptr_t)(&RME_Stack[2047])= ");
 556              		.loc 1 77 5
 557 0014 000000E3 		movw	r0, #:lower16:.LC1
 558 0018 000040E3 		movt	r0, #:upper16:.LC1
 559 001c FEFFFFEB 		bl	USR_DBG_S
  78:Source/rme_benchmark.c ****     USR_DBG_H((ptr_t)(&RME_Stack[2047]));
 560              		.loc 1 78 5
 561 0020 80319FE5 		ldr	r3, .L38+4
 562 0024 0300A0E1 		mov	r0, r3
 563 0028 FEFFFFEB 		bl	USR_DBG_H
  79:Source/rme_benchmark.c ****     USR_DBG_S("\r\nInitialize the thread's stack Stack_Addr= ");
 564              		.loc 1 79 5
 565 002c 000000E3 		movw	r0, #:lower16:.LC2
 566 0030 000040E3 		movt	r0, #:upper16:.LC2
 567 0034 FEFFFFEB 		bl	USR_DBG_S
  80:Source/rme_benchmark.c ****     USR_DBG_H(Stack_Addr);
 568              		.loc 1 80 5
 569 0038 0C001BE5 		ldr	r0, [fp, #-12]
 570 003c FEFFFFEB 		bl	USR_DBG_H
  81:Source/rme_benchmark.c **** 
  82:Source/rme_benchmark.c ****     /* There are still many bugs in the kernel. Need a white-box test to guarantee
  83:Source/rme_benchmark.c ****      * that it is free of bugs. Find a scheme to do that */
  84:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_THD_CRT,RME_BOOT_INIT_CPT,
 571              		.loc 1 84 12
 572 0040 093AA0E3 		mov	r3, #36864
 573 0044 1F20A0E3 		mov	r2, #31
 574 0048 022040E3 		movt	r2, 2
 575 004c 0810A0E3 		mov	r1, #8
 576 0050 051040E3 		movt	r1, 5
 577 0054 1908A0E3 		mov	r0, #1638400
 578 0058 FEFFFFEB 		bl	RME_Svc
 579 005c 10000BE5 		str	r0, [fp, #-16]
  85:Source/rme_benchmark.c ****                       RME_PARAM_D1(RME_BOOT_INIT_KOM)|RME_PARAM_D0(RME_BOOT_BENCH_THD),
  86:Source/rme_benchmark.c ****                       RME_PARAM_D1(RME_BOOT_INIT_PRC)|RME_PARAM_D0(31),
  87:Source/rme_benchmark.c ****                       RME_BOOT_BENCH_KOM_FRONTIER);
  88:Source/rme_benchmark.c ****     USR_DBG_S("\r\ncreate a thread      retval= ");
 580              		.loc 1 88 5
 581 0060 000000E3 		movw	r0, #:lower16:.LC3
 582 0064 000040E3 		movt	r0, #:upper16:.LC3
 583 0068 FEFFFFEB 		bl	USR_DBG_S
  89:Source/rme_benchmark.c ****     USR_DBG_I(Retval);
 584              		.loc 1 89 5
 585 006c 10001BE5 		ldr	r0, [fp, #-16]
 586 0070 FEFFFFEB 		bl	USR_DBG_I
  90:Source/rme_benchmark.c **** 
  91:Source/rme_benchmark.c ****     /* Bind the thread to the processor */
  92:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_THD_SCHED_BIND,RME_BOOT_BENCH_THD,
 587              		.loc 1 92 12
 588 0074 0030A0E3 		mov	r3, #0
 589 0078 0220A0E3 		mov	r2, #2
 590 007c 022040E3 		movt	r2, 2
 591 0080 0E19A0E3 		mov	r1, #229376
 592 0084 0800A0E3 		mov	r0, #8
 593 0088 1B0040E3 		movt	r0, 27
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 19


 594 008c FEFFFFEB 		bl	RME_Svc
 595 0090 10000BE5 		str	r0, [fp, #-16]
  93:Source/rme_benchmark.c ****     		          RME_PARAM_D1(RME_BOOT_INIT_THD)|RME_PARAM_D0(RME_CID_NULL),
  94:Source/rme_benchmark.c **** 					  RME_PARAM_D1(RME_TID_2)|RME_PARAM_D0(RME_BOOT_INIT_PRC),
  95:Source/rme_benchmark.c **** 					  RME_BOOT_HYPER_KOM_VADDR);
  96:Source/rme_benchmark.c ****     USR_DBG_S("\r\nBind the thread to the processor retval= ");
 596              		.loc 1 96 5
 597 0094 000000E3 		movw	r0, #:lower16:.LC4
 598 0098 000040E3 		movt	r0, #:upper16:.LC4
 599 009c FEFFFFEB 		bl	USR_DBG_S
  97:Source/rme_benchmark.c ****     USR_DBG_I(Retval);
 600              		.loc 1 97 5
 601 00a0 10001BE5 		ldr	r0, [fp, #-16]
 602 00a4 FEFFFFEB 		bl	USR_DBG_I
  98:Source/rme_benchmark.c ****     extern void RME_Deadloop(void);
  99:Source/rme_benchmark.c ****     /* Set the execution information */
 100:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_THD_EXEC_SET,RME_BOOT_BENCH_THD,
 603              		.loc 1 100 12
 604 00a8 001000E3 		movw	r1, #:lower16:RME_Same_Prc_Thd_Switch_Test_Thd
 605 00ac 001040E3 		movt	r1, #:upper16:RME_Same_Prc_Thd_Switch_Test_Thd
 606 00b0 0230A0E3 		mov	r3, #2
 607 00b4 0C201BE5 		ldr	r2, [fp, #-12]
 608 00b8 0800A0E3 		mov	r0, #8
 609 00bc 060040E3 		movt	r0, 6
 610 00c0 FEFFFFEB 		bl	RME_Svc
 611 00c4 10000BE5 		str	r0, [fp, #-16]
 101:Source/rme_benchmark.c **** 	         	 	 (ptr_t)RME_Same_Prc_Thd_Switch_Test_Thd,
 102:Source/rme_benchmark.c ****     		         //(ptr_t)RME_Deadloop,
 103:Source/rme_benchmark.c **** 					 Stack_Addr,RME_TID_2);
 104:Source/rme_benchmark.c ****     RME_Stack[2000]=1234;
 612              		.loc 1 104 20
 613 00c8 003000E3 		movw	r3, #:lower16:RME_Stack
 614 00cc 003040E3 		movt	r3, #:upper16:RME_Stack
 615 00d0 013A83E2 		add	r3, r3, #4096
 616 00d4 0320A0E1 		mov	r2, r3
 617 00d8 D23400E3 		movw	r3, #1234
 618 00dc 403F82E5 		str	r3, [r2, #3904]
 105:Source/rme_benchmark.c ****     USR_DBG_S("\r\nSet the execution information retval= ");
 619              		.loc 1 105 5
 620 00e0 000000E3 		movw	r0, #:lower16:.LC5
 621 00e4 000040E3 		movt	r0, #:upper16:.LC5
 622 00e8 FEFFFFEB 		bl	USR_DBG_S
 106:Source/rme_benchmark.c ****     USR_DBG_I(Retval);
 623              		.loc 1 106 5
 624 00ec 10001BE5 		ldr	r0, [fp, #-16]
 625 00f0 FEFFFFEB 		bl	USR_DBG_I
 107:Source/rme_benchmark.c ****     USR_DBG_S("\r\n");
 626              		.loc 1 107 5
 627 00f4 000000E3 		movw	r0, #:lower16:.LC6
 628 00f8 000040E3 		movt	r0, #:upper16:.LC6
 629 00fc FEFFFFEB 		bl	USR_DBG_S
 108:Source/rme_benchmark.c ****     /* Delegate some timeslice to it */
 109:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_THD_TIME_XFER,RME_BOOT_BENCH_THD,
 630              		.loc 1 109 12
 631 0100 803609E3 		movw	r3, #38528
 632 0104 983040E3 		movt	r3, 152
 633 0108 0320A0E3 		mov	r2, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 20


 634 010c 0810A0E3 		mov	r1, #8
 635 0110 0800A0E3 		mov	r0, #8
 636 0114 080040E3 		movt	r0, 8
 637 0118 FEFFFFEB 		bl	RME_Svc
 638 011c 10000BE5 		str	r0, [fp, #-16]
 110:Source/rme_benchmark.c ****                       RME_BOOT_BENCH_THD,
 111:Source/rme_benchmark.c ****                       RME_BOOT_INIT_THD,
 112:Source/rme_benchmark.c ****                       10000000);
 113:Source/rme_benchmark.c ****     
 114:Source/rme_benchmark.c ****     /* Try to switch to that thread - should fail */
 115:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_THD_SWT,0,
 639              		.loc 1 115 12
 640 0120 0030A0E3 		mov	r3, #0
 641 0124 0020A0E3 		mov	r2, #0
 642 0128 0810A0E3 		mov	r1, #8
 643 012c 0908A0E3 		mov	r0, #589824
 644 0130 FEFFFFEB 		bl	RME_Svc
 645 0134 10000BE5 		str	r0, [fp, #-16]
 116:Source/rme_benchmark.c ****                       RME_BOOT_BENCH_THD,
 117:Source/rme_benchmark.c ****                       0,
 118:Source/rme_benchmark.c ****                       0);
 119:Source/rme_benchmark.c ****     USR_DBG_S("\r\nTry to switch to that thread - should fail  retval= ");
 646              		.loc 1 119 5
 647 0138 000000E3 		movw	r0, #:lower16:.LC7
 648 013c 000040E3 		movt	r0, #:upper16:.LC7
 649 0140 FEFFFFEB 		bl	USR_DBG_S
 120:Source/rme_benchmark.c ****     USR_DBG_I(Retval);
 650              		.loc 1 120 5
 651 0144 10001BE5 		ldr	r0, [fp, #-16]
 652 0148 FEFFFFEB 		bl	USR_DBG_I
 121:Source/rme_benchmark.c ****     /* Test result: intra-process ctxsw 358cycles/1.657us, frt w/mpu 163cycles/0.754us,
 122:Source/rme_benchmark.c ****     * composite 324. opted max:323
 123:Source/rme_benchmark.c ****     * all:33.0
 124:Source/rme_benchmark.c ****     * empty: 4.09 - 0.409us, most time spent on internals
 125:Source/rme_benchmark.c ****     * w/selections: 7.15 - maybe no need to check frozen cap from the proc.
 126:Source/rme_benchmark.c ****     * w/checkings:10.926 - 317us.
 127:Source/rme_benchmark.c ****     * total:16.57
 128:Source/rme_benchmark.c ****     * 16.2us now, after cleaning up two bad things
 129:Source/rme_benchmark.c ****     * 14.7us after CPUID optimizations. The quiescence hardly worked.
 130:Source/rme_benchmark.c ****     * no cache - 3 times slower, mainly due to the flash. ART does not really help.
 131:Source/rme_benchmark.c ****     * Performance cannot be further optimized anymore without compiler intrinsics.
 132:Source/rme_benchmark.c ****     * Something terribly wrong with systick. 38 second wrapwround
 133:Source/rme_benchmark.c ****     * This configuration, CPU works at 216MHz, correct, but the 
 134:Source/rme_benchmark.c ****     * The TSC is always 8 cycles between reads.
 135:Source/rme_benchmark.c ****     */
 136:Source/rme_benchmark.c ****     _RME_Tsc_Init();
 653              		.loc 1 136 5
 654 014c FEFFFFEB 		bl	_RME_Tsc_Init
 137:Source/rme_benchmark.c ****     //for(Count=0;Count<10000;Count++)
 138:Source/rme_benchmark.c ****     for(Count=0;Count<10;Count++)
 655              		.loc 1 138 14
 656 0150 0030A0E3 		mov	r3, #0
 657 0154 08300BE5 		str	r3, [fp, #-8]
 658              		.loc 1 138 5
 659 0158 0D0000EA 		b	.L35
 660              	.L36:
 139:Source/rme_benchmark.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 21


 140:Source/rme_benchmark.c ****         //Temp=RME_TSC();
 141:Source/rme_benchmark.c ****         Retval=RME_CAP_OP(RME_SVC_THD_SWT,0,
 661              		.loc 1 141 16
 662 015c 0030A0E3 		mov	r3, #0
 663 0160 0020A0E3 		mov	r2, #0
 664 0164 0810A0E3 		mov	r1, #8
 665 0168 0908A0E3 		mov	r0, #589824
 666 016c FEFFFFEB 		bl	RME_Svc
 667 0170 10000BE5 		str	r0, [fp, #-16]
 142:Source/rme_benchmark.c ****                           RME_BOOT_BENCH_THD,
 143:Source/rme_benchmark.c ****                           0,
 144:Source/rme_benchmark.c ****                           0);
 145:Source/rme_benchmark.c ****         //Temp=RME_TSC()-Temp;
 146:Source/rme_benchmark.c ****        // Time[Count]=Temp-8;
 147:Source/rme_benchmark.c ****         USR_DBG_S("\r\nTry to switch to that thread  retval= ");
 668              		.loc 1 147 9
 669 0174 000000E3 		movw	r0, #:lower16:.LC8
 670 0178 000040E3 		movt	r0, #:upper16:.LC8
 671 017c FEFFFFEB 		bl	USR_DBG_S
 148:Source/rme_benchmark.c ****         USR_DBG_I(Retval);
 672              		.loc 1 148 9
 673 0180 10001BE5 		ldr	r0, [fp, #-16]
 674 0184 FEFFFFEB 		bl	USR_DBG_I
 138:Source/rme_benchmark.c ****     {
 675              		.loc 1 138 31 discriminator 3
 676 0188 08301BE5 		ldr	r3, [fp, #-8]
 677 018c 013083E2 		add	r3, r3, #1
 678 0190 08300BE5 		str	r3, [fp, #-8]
 679              	.L35:
 138:Source/rme_benchmark.c ****     {
 680              		.loc 1 138 22 discriminator 1
 681 0194 08301BE5 		ldr	r3, [fp, #-8]
 682 0198 090053E3 		cmp	r3, #9
 683 019c EEFFFFDA 		ble	.L36
 684              	.L37:
 149:Source/rme_benchmark.c ****     }
 150:Source/rme_benchmark.c ****     
 151:Source/rme_benchmark.c ****     while(1);
 685              		.loc 1 151 10
 686 01a0 FEFFFFEA 		b	.L37
 687              	.L39:
 688              		.align	2
 689              	.L38:
 690 01a4 401F0000 		.word	RME_Stack+8000
 691 01a8 FC1F0000 		.word	RME_Stack+8188
 692              		.cfi_endproc
 693              	.LFE6:
 695              		.section	.text.RME_Diff_Prc_Thd_Switch_Test_Thd,"ax",%progbits
 696              		.align	2
 697              		.global	RME_Diff_Prc_Thd_Switch_Test_Thd
 698              		.syntax unified
 699              		.arm
 701              	RME_Diff_Prc_Thd_Switch_Test_Thd:
 702              	.LFB7:
 152:Source/rme_benchmark.c **** }
 153:Source/rme_benchmark.c **** /* End Function:RME_Same_Prc_Thd_Switch_Test ********************************/
 154:Source/rme_benchmark.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 22


 155:Source/rme_benchmark.c **** /* Function:RME_Diff_Prc_Thd_Switch_Test_Thd *********************************
 156:Source/rme_benchmark.c **** Description : The thread for testing same-process thread switching performance.
 157:Source/rme_benchmark.c **** Input       : None.
 158:Source/rme_benchmark.c **** Output      : None.
 159:Source/rme_benchmark.c **** Return      : None.
 160:Source/rme_benchmark.c **** ******************************************************************************/
 161:Source/rme_benchmark.c **** void RME_Diff_Prc_Thd_Switch_Test_Thd(ptr_t Param1, ptr_t Param2, ptr_t Param3, ptr_t Param4)
 162:Source/rme_benchmark.c **** {
 703              		.loc 1 162 1
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 24
 706              		@ frame_needed = 1, uses_anonymous_args = 0
 707 0000 00482DE9 		push	{fp, lr}
 708              		.cfi_def_cfa_offset 8
 709              		.cfi_offset 11, -8
 710              		.cfi_offset 14, -4
 711 0004 04B08DE2 		add	fp, sp, #4
 712              		.cfi_def_cfa 11, 4
 713 0008 18D04DE2 		sub	sp, sp, #24
 714 000c 10000BE5 		str	r0, [fp, #-16]
 715 0010 14100BE5 		str	r1, [fp, #-20]
 716 0014 18200BE5 		str	r2, [fp, #-24]
 717 0018 1C300BE5 		str	r3, [fp, #-28]
 718              	.L41:
 163:Source/rme_benchmark.c ****     ret_t Retval;
 164:Source/rme_benchmark.c ****     /* Now we switch back to the init thread, immediately */
 165:Source/rme_benchmark.c ****     while(1)
 166:Source/rme_benchmark.c ****     {
 167:Source/rme_benchmark.c ****         Retval=RME_CAP_OP(RME_SVC_THD_SWT,0,
 719              		.loc 1 167 16 discriminator 1
 720 001c 0030A0E3 		mov	r3, #0
 721 0020 0020A0E3 		mov	r2, #0
 722 0024 0310A0E3 		mov	r1, #3
 723 0028 0908A0E3 		mov	r0, #589824
 724 002c FEFFFFEB 		bl	RME_Svc
 725 0030 08000BE5 		str	r0, [fp, #-8]
 726              		.loc 1 167 15
 727 0034 F8FFFFEA 		b	.L41
 728              		.cfi_endproc
 729              	.LFE7:
 731              		.section	.text.RME_Diff_Prc_Thd_Switch_Test,"ax",%progbits
 732              		.align	2
 733              		.global	RME_Diff_Prc_Thd_Switch_Test
 734              		.syntax unified
 735              		.arm
 737              	RME_Diff_Prc_Thd_Switch_Test:
 738              	.LFB8:
 168:Source/rme_benchmark.c ****                           RME_BOOT_INIT_THD,
 169:Source/rme_benchmark.c ****                           0,
 170:Source/rme_benchmark.c ****                           0);
 171:Source/rme_benchmark.c ****     }
 172:Source/rme_benchmark.c **** }
 173:Source/rme_benchmark.c **** /* End Function:RME_Diff_Prc_Thd_Switch_Test_Thd ****************************/
 174:Source/rme_benchmark.c **** 
 175:Source/rme_benchmark.c **** /* Function:RME_Diff_Prc_Thd_Switch_Test *************************************
 176:Source/rme_benchmark.c **** Description : The same-process thread switch test code.
 177:Source/rme_benchmark.c **** Input       : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 23


 178:Source/rme_benchmark.c **** Output      : None.
 179:Source/rme_benchmark.c **** Return      : None.
 180:Source/rme_benchmark.c **** ******************************************************************************/
 181:Source/rme_benchmark.c **** void RME_Diff_Prc_Thd_Switch_Test(void)
 182:Source/rme_benchmark.c **** {
 739              		.loc 1 182 1
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 16
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743 0000 00482DE9 		push	{fp, lr}
 744              		.cfi_def_cfa_offset 8
 745              		.cfi_offset 11, -8
 746              		.cfi_offset 14, -4
 747 0004 04B08DE2 		add	fp, sp, #4
 748              		.cfi_def_cfa 11, 4
 749 0008 18D04DE2 		sub	sp, sp, #24
 183:Source/rme_benchmark.c ****     /* Intra-process thread switching time */
 184:Source/rme_benchmark.c ****     ret_t Retval;
 185:Source/rme_benchmark.c ****     cnt_t Count;
 186:Source/rme_benchmark.c ****     ptr_t Stack_Addr;
 187:Source/rme_benchmark.c ****     ptr_t Temp;
 188:Source/rme_benchmark.c ****     ptr_t Frontier;
 189:Source/rme_benchmark.c ****     
 190:Source/rme_benchmark.c ****     Frontier=RME_BOOT_BENCH_KOM_FRONTIER;
 750              		.loc 1 190 13
 751 000c 093AA0E3 		mov	r3, #36864
 752 0010 0C300BE5 		str	r3, [fp, #-12]
 191:Source/rme_benchmark.c ****     /* Initialize the thread's stack before entering it */
 192:Source/rme_benchmark.c ****     Stack_Addr=_RME_Stack_Init((ptr_t)(&RME_Stack[2047]),
 753              		.loc 1 192 16
 754 0014 10019FE5 		ldr	r0, .L46
 755 0018 001000E3 		movw	r1, #:lower16:RME_Thd_Stub
 756 001c 001040E3 		movt	r1, #:upper16:RME_Thd_Stub
 757 0020 0430A0E3 		mov	r3, #4
 758 0024 04308DE5 		str	r3, [sp, #4]
 759 0028 0330A0E3 		mov	r3, #3
 760 002c 00308DE5 		str	r3, [sp]
 761 0030 0230A0E3 		mov	r3, #2
 762 0034 0120A0E3 		mov	r2, #1
 763 0038 FEFFFFEB 		bl	_RME_Stack_Init
 764 003c 10000BE5 		str	r0, [fp, #-16]
 193:Source/rme_benchmark.c ****                                (ptr_t)RME_Thd_Stub,
 194:Source/rme_benchmark.c ****                                1, 2, 3, 4);
 195:Source/rme_benchmark.c ****     
 196:Source/rme_benchmark.c ****     /* Create the page table for the whole address space range */
 197:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_PGT_CRT,RME_BOOT_INIT_CPT,
 765              		.loc 1 197 12
 766 0040 0130A0E3 		mov	r3, #1
 767 0044 0C201BE5 		ldr	r2, [fp, #-12]
 768 0048 D31900E3 		movw	r1, #2515
 769 004c 051040E3 		movt	r1, 5
 770 0050 0F08A0E3 		mov	r0, #983040
 771 0054 FEFFFFEB 		bl	RME_Svc
 772 0058 14000BE5 		str	r0, [fp, #-20]
 198:Source/rme_benchmark.c ****                       RME_PARAM_D1(RME_BOOT_INIT_KOM)|RME_PARAM_Q1(RME_BOOT_BENCH_PGT_TOP)|
 199:Source/rme_benchmark.c ****                       RME_PARAM_O1(29)|RME_PARAM_O0(3),
 200:Source/rme_benchmark.c ****                       Frontier,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 24


 201:Source/rme_benchmark.c ****                       1);
 202:Source/rme_benchmark.c **** //    Frontier+=;
 203:Source/rme_benchmark.c **** //    /* Create the page table for the SRAM range */
 204:Source/rme_benchmark.c **** //    Retval=RME_CAP_OP(RME_SVC_PGT_CRT,RME_BOOT_INIT_CPT,
 205:Source/rme_benchmark.c **** //                      RME_PARAM_D1(RME_BOOT_INIT_KOM)|RME_PARAM_Q1(RME_BOOT_BENCH_PGT_SRAM)|
 206:Source/rme_benchmark.c **** //                      RME_PARAM_O1(16)|RME_PARAM_O0(3),
 207:Source/rme_benchmark.c **** //                      Frontier,
 208:Source/rme_benchmark.c **** //                      0x20000001);
 209:Source/rme_benchmark.c **** //    Frontier+=;
 210:Source/rme_benchmark.c **** //    /* Map the pages into the top-level and the second-level */
 211:Source/rme_benchmark.c **** //    RME_CAP_OP(RME_SVC_PGT_ADD,0,
 212:Source/rme_benchmark.c **** //               RME_PARAM_Q1(RME_BOOT_BENCH_PGT_TOP)|0,
 213:Source/rme_benchmark.c **** //               RME_PARAM_D1(RME_BOOT_INIT_PGT)|0,
 214:Source/rme_benchmark.c **** //               |0)
 215:Source/rme_benchmark.c ****                       
 216:Source/rme_benchmark.c ****                   
 217:Source/rme_benchmark.c ****     
 218:Source/rme_benchmark.c ****     
 219:Source/rme_benchmark.c ****     
 220:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_THD_CRT,RME_BOOT_INIT_CPT,
 773              		.loc 1 220 12
 774 005c 093AA0E3 		mov	r3, #36864
 775 0060 1F20A0E3 		mov	r2, #31
 776 0064 022040E3 		movt	r2, 2
 777 0068 0810A0E3 		mov	r1, #8
 778 006c 051040E3 		movt	r1, 5
 779 0070 1908A0E3 		mov	r0, #1638400
 780 0074 FEFFFFEB 		bl	RME_Svc
 781 0078 14000BE5 		str	r0, [fp, #-20]
 221:Source/rme_benchmark.c ****                       RME_PARAM_D1(RME_BOOT_INIT_KOM)|RME_PARAM_D0(RME_BOOT_BENCH_THD),
 222:Source/rme_benchmark.c ****                       RME_PARAM_D1(RME_BOOT_INIT_PRC)|RME_PARAM_D0(31),
 223:Source/rme_benchmark.c ****                       RME_BOOT_BENCH_KOM_FRONTIER);
 224:Source/rme_benchmark.c ****     
 225:Source/rme_benchmark.c ****     /* Bind the thread to the processor */
 226:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_THD_SCHED_BIND,0,
 782              		.loc 1 226 12
 783 007c 0030A0E3 		mov	r3, #0
 784 0080 0320A0E3 		mov	r2, #3
 785 0084 0810A0E3 		mov	r1, #8
 786 0088 1B08A0E3 		mov	r0, #1769472
 787 008c FEFFFFEB 		bl	RME_Svc
 788 0090 14000BE5 		str	r0, [fp, #-20]
 227:Source/rme_benchmark.c ****                       RME_BOOT_BENCH_THD,
 228:Source/rme_benchmark.c ****                       RME_BOOT_INIT_THD,
 229:Source/rme_benchmark.c ****                       0);
 230:Source/rme_benchmark.c ****     
 231:Source/rme_benchmark.c ****     /* Set the execution information */
 232:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_THD_EXEC_SET,0,
 789              		.loc 1 232 12
 790 0094 002000E3 		movw	r2, #:lower16:RME_Same_Prc_Thd_Switch_Test_Thd
 791 0098 002040E3 		movt	r2, #:upper16:RME_Same_Prc_Thd_Switch_Test_Thd
 792 009c 10301BE5 		ldr	r3, [fp, #-16]
 793 00a0 0810A0E3 		mov	r1, #8
 794 00a4 0608A0E3 		mov	r0, #393216
 795 00a8 FEFFFFEB 		bl	RME_Svc
 796 00ac 14000BE5 		str	r0, [fp, #-20]
 233:Source/rme_benchmark.c ****                       RME_BOOT_BENCH_THD,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 25


 234:Source/rme_benchmark.c ****                       (ptr_t)RME_Same_Prc_Thd_Switch_Test_Thd,
 235:Source/rme_benchmark.c ****                       Stack_Addr);
 236:Source/rme_benchmark.c ****                       
 237:Source/rme_benchmark.c ****     /* Delegate some timeslice to it */
 238:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_THD_TIME_XFER,0,
 797              		.loc 1 238 12
 798 00b0 803609E3 		movw	r3, #38528
 799 00b4 983040E3 		movt	r3, 152
 800 00b8 0320A0E3 		mov	r2, #3
 801 00bc 0810A0E3 		mov	r1, #8
 802 00c0 0207A0E3 		mov	r0, #524288
 803 00c4 FEFFFFEB 		bl	RME_Svc
 804 00c8 14000BE5 		str	r0, [fp, #-20]
 239:Source/rme_benchmark.c ****                       RME_BOOT_BENCH_THD,
 240:Source/rme_benchmark.c ****                       RME_BOOT_INIT_THD,
 241:Source/rme_benchmark.c ****                       10000000);
 242:Source/rme_benchmark.c ****     
 243:Source/rme_benchmark.c ****     /* Try to switch to that thread - should fail */
 244:Source/rme_benchmark.c ****     Retval=RME_CAP_OP(RME_SVC_THD_SWT,0,
 805              		.loc 1 244 12
 806 00cc 0030A0E3 		mov	r3, #0
 807 00d0 0020A0E3 		mov	r2, #0
 808 00d4 0810A0E3 		mov	r1, #8
 809 00d8 0908A0E3 		mov	r0, #589824
 810 00dc FEFFFFEB 		bl	RME_Svc
 811 00e0 14000BE5 		str	r0, [fp, #-20]
 245:Source/rme_benchmark.c ****                       RME_BOOT_BENCH_THD,
 246:Source/rme_benchmark.c ****                       0,
 247:Source/rme_benchmark.c ****                       0);
 248:Source/rme_benchmark.c ****     /* Test result: intra-process ctxsw 358cycles/1.657us, frt w/mpu 163cycles/0.754us,
 249:Source/rme_benchmark.c ****     * composite 324. opted max:323
 250:Source/rme_benchmark.c ****     * all:33.0
 251:Source/rme_benchmark.c ****     * empty: 4.09 - 0.409us, most time spent on internals
 252:Source/rme_benchmark.c ****     * w/selections: 7.15 - maybe no need to check frozen cap from the proc.
 253:Source/rme_benchmark.c ****     * w/checkings:10.926 - 317us.
 254:Source/rme_benchmark.c ****     * total:16.57
 255:Source/rme_benchmark.c ****     * 16.2us now, after cleaning up two bad things
 256:Source/rme_benchmark.c ****     * 14.7us after CPUID optimizations. The quiescence hardly worked.
 257:Source/rme_benchmark.c ****     * no cache - 3 times slower, mainly due to the flash. ART does not really help.
 258:Source/rme_benchmark.c ****     * Performance cannot be further optimized anymore without compiler intrinsics.
 259:Source/rme_benchmark.c ****     * Something terribly wrong with systick. 38 second wrapwround
 260:Source/rme_benchmark.c ****     * This configuration, CPU works at 216MHz, correct, but the 
 261:Source/rme_benchmark.c ****     * The TSC is always 8 cycles between reads.
 262:Source/rme_benchmark.c ****     */
 263:Source/rme_benchmark.c ****     _RME_Tsc_Init();
 812              		.loc 1 263 5
 813 00e4 FEFFFFEB 		bl	_RME_Tsc_Init
 264:Source/rme_benchmark.c ****     for(Count=0;Count<10000;Count++)
 814              		.loc 1 264 14
 815 00e8 0030A0E3 		mov	r3, #0
 816 00ec 08300BE5 		str	r3, [fp, #-8]
 817              		.loc 1 264 5
 818 00f0 080000EA 		b	.L43
 819              	.L44:
 265:Source/rme_benchmark.c ****     {
 266:Source/rme_benchmark.c ****         //Temp=RME_TSC();
 267:Source/rme_benchmark.c ****         Retval=RME_CAP_OP(RME_SVC_THD_SWT,0,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 26


 820              		.loc 1 267 16
 821 00f4 0030A0E3 		mov	r3, #0
 822 00f8 0020A0E3 		mov	r2, #0
 823 00fc 0810A0E3 		mov	r1, #8
 824 0100 0908A0E3 		mov	r0, #589824
 825 0104 FEFFFFEB 		bl	RME_Svc
 826 0108 14000BE5 		str	r0, [fp, #-20]
 264:Source/rme_benchmark.c ****     for(Count=0;Count<10000;Count++)
 827              		.loc 1 264 34 discriminator 3
 828 010c 08301BE5 		ldr	r3, [fp, #-8]
 829 0110 013083E2 		add	r3, r3, #1
 830 0114 08300BE5 		str	r3, [fp, #-8]
 831              	.L43:
 264:Source/rme_benchmark.c ****     for(Count=0;Count<10000;Count++)
 832              		.loc 1 264 22 discriminator 1
 833 0118 08301BE5 		ldr	r3, [fp, #-8]
 834 011c 0F2702E3 		movw	r2, #9999
 835 0120 020053E1 		cmp	r3, r2
 836 0124 F2FFFFDA 		ble	.L44
 837              	.L45:
 268:Source/rme_benchmark.c ****                           RME_BOOT_BENCH_THD,
 269:Source/rme_benchmark.c ****                           0,
 270:Source/rme_benchmark.c ****                           0);
 271:Source/rme_benchmark.c ****         //Temp=RME_TSC()-Temp;
 272:Source/rme_benchmark.c ****         //Time[Count]=Temp-8;
 273:Source/rme_benchmark.c ****     }
 274:Source/rme_benchmark.c ****     
 275:Source/rme_benchmark.c ****     while(1);
 838              		.loc 1 275 10
 839 0128 FEFFFFEA 		b	.L45
 840              	.L47:
 841              		.align	2
 842              	.L46:
 843 012c FC1F0000 		.word	RME_Stack+8188
 844              		.cfi_endproc
 845              	.LFE8:
 847              		.section	.rodata
 848 0149 000000   		.align	2
 849              	.LC9:
 850 014c 0D0A6265 		.ascii	"\015\012begin test \000"
 850      67696E20 
 850      74657374 
 850      2000
 851              		.section	.text.RME_Benchmark,"ax",%progbits
 852              		.align	2
 853              		.global	RME_Benchmark
 854              		.syntax unified
 855              		.arm
 857              	RME_Benchmark:
 858              	.LFB9:
 276:Source/rme_benchmark.c **** }
 277:Source/rme_benchmark.c **** /* End Function:RME_Diff_Prc_Thd_Switch_Test ********************************/
 278:Source/rme_benchmark.c **** 
 279:Source/rme_benchmark.c **** /* Function:RME_Benchmark *****************************************************
 280:Source/rme_benchmark.c **** Description : The benchmark entry, also the init thread.
 281:Source/rme_benchmark.c **** Input       : None.
 282:Source/rme_benchmark.c **** Output      : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 27


 283:Source/rme_benchmark.c **** Return      : None.
 284:Source/rme_benchmark.c **** ******************************************************************************/
 285:Source/rme_benchmark.c **** void RME_Benchmark(void)
 286:Source/rme_benchmark.c **** {
 859              		.loc 1 286 1
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 1, uses_anonymous_args = 0
 863 0000 00482DE9 		push	{fp, lr}
 864              		.cfi_def_cfa_offset 8
 865              		.cfi_offset 11, -8
 866              		.cfi_offset 14, -4
 867 0004 04B08DE2 		add	fp, sp, #4
 868              		.cfi_def_cfa 11, 4
 287:Source/rme_benchmark.c ****     USR_DBG_S("\r\nbegin test ");
 869              		.loc 1 287 5
 870 0008 000000E3 		movw	r0, #:lower16:.LC9
 871 000c 000040E3 		movt	r0, #:upper16:.LC9
 872 0010 FEFFFFEB 		bl	USR_DBG_S
 288:Source/rme_benchmark.c ****     USR_DBG_H(0x111111);
 873              		.loc 1 288 5
 874 0014 110101E3 		movw	r0, #4369
 875 0018 110040E3 		movt	r0, 17
 876 001c FEFFFFEB 		bl	USR_DBG_H
 289:Source/rme_benchmark.c ****     RME_Same_Prc_Thd_Switch_Test();
 877              		.loc 1 289 5
 878 0020 FEFFFFEB 		bl	RME_Same_Prc_Thd_Switch_Test
 290:Source/rme_benchmark.c **** }
 879              		.loc 1 290 1
 880 0024 00F020E3 		nop
 881 0028 0088BDE8 		pop	{fp, pc}
 882              		.cfi_endproc
 883              	.LFE9:
 885              		.text
 886              	.Letext0:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccDRm9qP.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 rme_benchmark.c
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:25     .bss.RME_Stack:00000000 RME_Stack
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:22     .bss.RME_Stack:00000000 $d
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:32     .bss.Time:00000000 Time
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:29     .bss.Time:00000000 $d
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:39     .bss.RME_Bench_Buf:00000000 RME_Bench_Buf
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:36     .bss.RME_Bench_Buf:00000000 $d
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:42     .text.__USR_Putchar:00000000 $a
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:47     .text.__USR_Putchar:00000000 __USR_Putchar
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:91     .text.USR_DBG_I:00000000 $a
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:96     .text.USR_DBG_I:00000000 USR_DBG_I
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:246    .text.USR_DBG_H:00000000 $a
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:251    .text.USR_DBG_H:00000000 USR_DBG_H
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:367    .text.USR_DBG_S:00000000 $a
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:372    .text.USR_DBG_S:00000000 USR_DBG_S
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:434    .text._RME_Tsc_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:439    .text._RME_Tsc_Init:00000000 _RME_Tsc_Init
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:464    .rodata:00000000 $d
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:465    .rodata:00000000 .LC0
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:468    .text.RME_Same_Prc_Thd_Switch_Test_Thd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:473    .text.RME_Same_Prc_Thd_Switch_Test_Thd:00000000 RME_Same_Prc_Thd_Switch_Test_Thd
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:510    .rodata:0000001c .LC1
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:513    .rodata:0000003c .LC2
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:516    .rodata:0000006c .LC3
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:519    .rodata:0000008c .LC4
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:522    .rodata:000000b8 .LC5
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:525    .rodata:000000e4 .LC6
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:528    .rodata:000000e8 .LC7
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:532    .rodata:00000120 .LC8
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:535    .text.RME_Same_Prc_Thd_Switch_Test:00000000 $a
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:540    .text.RME_Same_Prc_Thd_Switch_Test:00000000 RME_Same_Prc_Thd_Switch_Test
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:690    .text.RME_Same_Prc_Thd_Switch_Test:000001a4 $d
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:696    .text.RME_Diff_Prc_Thd_Switch_Test_Thd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:701    .text.RME_Diff_Prc_Thd_Switch_Test_Thd:00000000 RME_Diff_Prc_Thd_Switch_Test_Thd
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:732    .text.RME_Diff_Prc_Thd_Switch_Test:00000000 $a
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:737    .text.RME_Diff_Prc_Thd_Switch_Test:00000000 RME_Diff_Prc_Thd_Switch_Test
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:843    .text.RME_Diff_Prc_Thd_Switch_Test:0000012c $d
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:849    .rodata:0000014c .LC9
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:852    .text.RME_Benchmark:00000000 $a
C:\Users\even\AppData\Local\Temp\ccDRm9qP.s:857    .text.RME_Benchmark:00000000 RME_Benchmark
                           .group:00000000 wm4.0.3b9f63523dc4e8d86e863c7e7e762be7
                           .group:00000000 wm4.rme.h.11.105c42759f88404be372052d8d99e5e6
                           .group:00000000 wm4.benchmark.h.4.9b11df29d9aebbd6185ab3bfed57b13a

UNDEFINED SYMBOLS
__aeabi_idiv
__aeabi_idivmod
RME_Svc
RME_Thd_Stub
_RME_Stack_Init
